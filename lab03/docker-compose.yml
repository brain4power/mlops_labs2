version: "3.3"

services:
  mlflow_db:
    restart: always
    image: postgres
    container_name: mlflow_db
    env_file:
      - .env
    ports:
      - "55432:5432"
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "${POSTGRES_PORT}", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3

  minio:
    restart: always
    image: bitnami/minio:latest
    container_name: minio
    env_file:
      - .env
    volumes:
      - ./volumes/minio/data:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
#    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mlflow_server:
    restart: always
    build: ./src/mlflow
    image: mlflow_server
    container_name: mlflow_server
    depends_on:
      - mlflow_db
    ports:
      - "${MLFLOW_EXTERNAL_PORT}:5000"
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=http://${MINIO_HOST}:${MINIO_PORT}
      - MLFLOW_S3_IGNORE_TLS=true
    command: >
      mlflow server
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination ${MINIO_HOST}://${MLFLOW_BUCKET_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3
